package com.pc.ui;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Component;
import javax.faces.bean.ViewScoped;
import org.primefaces.model.LazyDataModel;
import org.primefaces.model.SortOrder;
import java.util.Map;
import com.pc.dao.EntityDAOFacade;

import com.pc.entities.####;
import com.pc.framework.AbstractUI;
import com.pc.service.####Service;

@Component("%%%%UI")
@ViewScoped
public class ####UI extends AbstractUI{

	@Autowired
	####Service %%%%Service;
	private ArrayList<####> %%%%List;
	private #### %%%%;
	private LazyDataModel<####> dataModel;
	@Autowired
	EntityDAOFacade entityDAOFacade;

	@PostConstruct
	public void init() {
		%%%% = new ####();
		load####Info();
	}

	public void save####()
	{
		try {
			%%%%Service.save####(%%%%);
			displayInfoMssg("Update Successful...!!");
			load####Info();
			reset();
		} catch (Exception e) {
			displayErrorMssg(e.getMessage());
			e.printStackTrace();
		}
	}
	
	public void delete####()
	{
		try {
			%%%%Service.delete####(%%%%);
			displayWarningMssg("Update Successful...!!");
			load####Info();
			reset();
		} catch (Exception e) {
			displayErrorMssg(e.getMessage());
			e.printStackTrace();
		}
	}
	
	public List<####> findAll####()
	{
		List<####> list=new ArrayList<>();
		try {
			list= %%%%Service.findAll####();
		} catch (Exception e) {
			displayErrorMssg(e.getMessage());
			e.printStackTrace();
		}
		
		return list;
	}
	
	public Page<####> findAll####Pageable()
	{
		Pageable p=null;
		try {
			return %%%%Service.findAll####(p);
		} catch (Exception e) {
			displayErrorMssg(e.getMessage());
			e.printStackTrace();
			return null;
		}
	}
	
	public List<####> findAll####Sort()
	{
		Sort s=null;
		List<####> list=new ArrayList<>();
		try {
			list =%%%%Service.findAll####(s);
		} catch (Exception e) {
			displayErrorMssg(e.getMessage());
			e.printStackTrace();
		}
		return list;
	}
	
	public void reset() {
		%%%% = new ####();
	}
	
	public void load####Info()
	{
		 dataModel = new LazyDataModel<####>() { 
			 
			   private static final long serialVersionUID = 1L; 
			   private List<####> list = new  ArrayList<####>();
			   
			   @Override 
			   public List<####> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String,Object> filters)  { 
			   
				try {
					list = (List<####>) entityDAOFacade.getResultList(####.class,first, pageSize, sortField, sortOrder, filters);
					dataModel.setRowCount(entityDAOFacade.count(filters,####.class));
				} catch (Exception e) {
					logger.fatal(e);
				} 
			    return list; 
			   }
			   
			    @Override
			    public Object getRowKey(#### obj) {
			        return obj.getId();
			    }
			    
			    @Override
			    public #### getRowData(String rowKey) {
			        for(#### obj : list) {
			            if(obj.getId().equals(Long.valueOf(rowKey)))
			                return obj;
			        }
			        return null;
			    }			    
			    
			  }; 
			
	}
	public #### get####() {
		return %%%%;
	}

	public void set####(#### %%%%) {
		this.%%%% = %%%%;
	}
	
	public ArrayList<####> get####List() {
		return %%%%List;
	}

	public void set####List(ArrayList<####> %%%%List) {
		this.%%%%List =%%%%List;
	}
	public LazyDataModel<####> getDataModel() {
		return dataModel;
	}

	public void setDataModel(LazyDataModel<####> dataModel) {
		this.dataModel = dataModel;
	}
	

}
